//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Example {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using uFrame.Kernel;
    using uFrame.MVVM;
    using uFrame.MVVM.Services;
    using uFrame.MVVM.Bindings;
    using uFrame.Serialization;
    using UniRx;
    using UnityEngine;
    using Example;
    
    
    public class TodoListViewBase : uFrame.MVVM.ViewBase {
        
        [UnityEngine.SerializeField()]
        private TodoItemsContentView _TodoItemsContentView;
        
        [UnityEngine.SerializeField()]
        private TodoItemView _TodoItemView;
        
        [UnityEngine.SerializeField()]
        [UFGroup("View Model Properties")]
        [UnityEngine.HideInInspector()]
        public String _TodoContent;
        
        [UFToggleGroup("TodoItems")]
        [UnityEngine.HideInInspector()]
        public bool _BindTodoItems = true;
        
        [UFToggleGroup("OnBtnAddClicked")]
        [UnityEngine.HideInInspector()]
        public bool _BindOnBtnAddClicked = true;
        
        [UFGroup("OnBtnAddClicked")]
        [UnityEngine.SerializeField()]
        [UnityEngine.HideInInspector()]
        [UnityEngine.Serialization.FormerlySerializedAsAttribute("_OnBtnAddClickedbutton")]
        protected UnityEngine.UI.Button _OnBtnAddClickedButton;
        
        [UFToggleGroup("TodoContent")]
        [UnityEngine.HideInInspector()]
        public bool _BindTodoContent = true;
        
        [UFGroup("TodoContent")]
        [UnityEngine.SerializeField()]
        [UnityEngine.HideInInspector()]
        [UnityEngine.Serialization.FormerlySerializedAsAttribute("_TodoContentinput")]
        protected UnityEngine.UI.InputField _TodoContentInput;
        
        public override string DefaultIdentifier {
            get {
                return base.DefaultIdentifier;
            }
        }
        
        public override System.Type ViewModelType {
            get {
                return typeof(TodoListViewModel);
            }
        }
        
        public TodoListViewModel TodoList {
            get {
                return (TodoListViewModel)ViewModelObject;
            }
        }
        
        public virtual TodoItemsContentView TodoItemsContentView {
            get {
                return _TodoItemsContentView ?? (_TodoItemsContentView = this.gameObject.EnsureComponent<TodoItemsContentView>());
            }
        }
        
        public virtual TodoItemView TodoItemView {
            get {
                return _TodoItemView ?? (_TodoItemView = this.gameObject.EnsureComponent<TodoItemView>());
            }
        }
        
        protected override void InitializeViewModel(uFrame.MVVM.ViewModel model) {
            base.InitializeViewModel(model);
            // NOTE: this method is only invoked if the 'Initialize ViewModel' is checked in the inspector.
            // var vm = model as TodoListViewModel;
            // This method is invoked when applying the data from the inspector to the viewmodel.  Add any view-specific customizations here.
            var todolistview = ((TodoListViewModel)model);
            todolistview.TodoContent = this._TodoContent;
        }
        
        public override void Bind() {
            base.Bind();
            // Use this.TodoList to access the viewmodel.
            // Use this method to subscribe to the view-model.
            // Any designer bindings are created in the base implementation.
            if (_BindTodoItems) {
                this.BindCollection(this.TodoList.TodoItems, this.TodoItemsOnAdd, this.TodoItemsOnRemove);
            }
            if (_BindOnBtnAddClicked) {
                this.BindButtonToCommand(_OnBtnAddClickedButton, this.TodoList.OnBtnAddClicked);
            }
            if (_BindTodoContent) {
                this.BindInputFieldToProperty(_TodoContentInput, this.TodoList.TodoContentProperty);
            }
        }
        
        public virtual void TodoItemsOnAdd(TodoItem arg1) {
        }
        
        public virtual void TodoItemsOnRemove(TodoItem arg1) {
        }
        
        public virtual void ExecuteOnBtnAddClicked() {
            TodoList.OnBtnAddClicked.OnNext(new OnBtnAddClickedCommand() { Sender = TodoList });
        }
        
        public virtual void ExecuteOnBtnAddClicked(OnBtnAddClickedCommand command) {
            command.Sender = TodoList;
            TodoList.OnBtnAddClicked.OnNext(command);
        }
    }
}
