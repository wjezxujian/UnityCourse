//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Example {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using uFrame.IOC;
    using uFrame.Kernel;
    using uFrame.MVVM;
    using uFrame.Serialization;
    using UniRx;
    
    
    public class UIPlayerInfoControllerBase : uFrame.MVVM.Controller {
        
        private uFrame.MVVM.IViewModelManager _UIPlayerInfoViewModelManager;
        
        [uFrame.IOC.InjectAttribute("UIPlayerInfo")]
        public uFrame.MVVM.IViewModelManager UIPlayerInfoViewModelManager {
            get {
                return _UIPlayerInfoViewModelManager;
            }
            set {
                _UIPlayerInfoViewModelManager = value;
            }
        }
        
        public IEnumerable<UIPlayerInfoViewModel> UIPlayerInfoViewModels {
            get {
                return UIPlayerInfoViewModelManager.OfType<UIPlayerInfoViewModel>();
            }
        }
        
        public override void Setup() {
            base.Setup();
            // This is called when the controller is created
        }
        
        public override void Initialize(uFrame.MVVM.ViewModel viewModel) {
            base.Initialize(viewModel);
            // This is called when a viewmodel is created
            this.InitializeUIPlayerInfo(((UIPlayerInfoViewModel)(viewModel)));
        }
        
        public virtual UIPlayerInfoViewModel CreateUIPlayerInfo() {
            return ((UIPlayerInfoViewModel)(this.Create(Guid.NewGuid().ToString())));
        }
        
        public override uFrame.MVVM.ViewModel CreateEmpty() {
            return new UIPlayerInfoViewModel(this.EventAggregator);
        }
        
        public virtual void InitializeUIPlayerInfo(UIPlayerInfoViewModel viewModel) {
            // This is called when a UIPlayerInfoViewModel is created
            viewModel.OnButtonClicked.Action = this.OnButtonClickedHandler;
            UIPlayerInfoViewModelManager.Add(viewModel);
        }
        
        public override void DisposingViewModel(uFrame.MVVM.ViewModel viewModel) {
            base.DisposingViewModel(viewModel);
            UIPlayerInfoViewModelManager.Remove(viewModel);
        }
        
        public virtual void OnButtonClicked(UIPlayerInfoViewModel viewModel) {
        }
        
        public virtual void OnButtonClickedHandler(OnButtonClickedCommand command) {
            this.OnButtonClicked(command.Sender as UIPlayerInfoViewModel);
        }
    }
}
